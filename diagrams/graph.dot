digraph doxygraph
{
graph [ rankdir="RL" ]
"class_pigmeat_1_1_core_1_1_i_o" [ label="Pigmeat::Core::IO\n|+AppendEntry ( Collection : string, Entry : JObject ) : void \{static\}\l+CleanCollections (  ) : void \{static\}\l+GetCollections (  ) : JObject \{static\}\l+GetGlobal (  ) : string \{static\}\l+GetLayoutContents ( LayoutPath : string, Overwrite : bool ) : string \{static\}\l+GetPigmeat (  ) : JObject \{static\}\l+GetYamlObject ( YamlString : string ) : JObject \{static\}\l+IncludeDirectory ( SourceDirectory : string, DestinationDirectory : string ) : void \{static\}\l+RenderPage ( PageObject : JObject, Collection : string, RenderWithLayout : bool, isMarkdown : bool ) : string \{static\}\l|+Layouts : Dictionary\< string, string \> \{settable\} \{gettable\} \{static\}\l+Serving : bool \{settable\} \{gettable\} \{static\}\l-Release : string \{static\}\l-layouts : Dictionary\< string, string \> \{static\}\l-serving : bool \{static\}\l" shape="record" ]
"class_pigmeat_1_1_core_1_1_page" [ label="Pigmeat::Core::Page\n|+GetPageObject ( PagePath : string ) : JObject \{static\}\l+SplitFrontmatter ( PageContents : string ) : string [] \{static\}\l-GetDayOfYear ( Date : DateTime, Culture : CultureInfo ) : string \{static\}\l-GetPermalink ( PageObject : JObject ) : string \{static\}\l|+content : string \{settable\} \{gettable\}\l+date : DateTime \{settable\} \{gettable\}\l+day : string \{settable\} \{gettable\}\l+dir : string \{settable\} \{gettable\}\l+hour : string \{settable\} \{gettable\}\l+i_day : string \{settable\} \{gettable\}\l+i_month : string \{settable\} \{gettable\}\l+long_day : string \{settable\} \{gettable\}\l+long_month : string \{settable\} \{gettable\}\l+minute : string \{settable\} \{gettable\}\l+month : string \{settable\} \{gettable\}\l+name : string \{settable\} \{gettable\}\l+permalink : string \{settable\} \{gettable\}\l+second : string \{settable\} \{gettable\}\l+short_day : string \{settable\} \{gettable\}\l+short_month : string \{settable\} \{gettable\}\l+short_year : string \{settable\} \{gettable\}\l+url : string \{settable\} \{gettable\}\l+w_day : int \{settable\} \{gettable\}\l+w_year : int \{settable\} \{gettable\}\l+week : string \{settable\} \{gettable\}\l+y_day : string \{settable\} \{gettable\}\l+year : string \{settable\} \{gettable\}\l" shape="record" ]
"class_pigmeat_1_1_core_1_1_snippet" [ label="Pigmeat::Core::Snippet\n|+Parse ( Contents : string, PageObject : JObject ) : string \{static\}\l-Render ( SnippetPath : string, PageObject : JObject ) : string \{static\}\l|+Input : string \{settable\} \{gettable\}\l+Variables : Dictionary\< string, string \> \{settable\} \{gettable\} \{static\}\l" shape="record" ]
"class_pigmeat_1_1_program" [ label="Pigmeat::Program\n|-About (  ) : void \{static\}\l-Build ( CleanCollections : bool ) : void \{static\}\l-Clean (  ) : void \{static\}\l-GetCommand ( args : string [] ) : void \{static\}\l-Help ( args : string [] ) : void \{static\}\l-Main ( args : string [] ) : void \{static\}\l-New (  ) : void \{static\}\l-Run ( args : string [] ) : void \{static\}\l-ServeBuild ( source : object, e : FileSystemEventArgs ) : void \{static\}\l-ServeWatch (  ) : void \{static\}\l-Terms (  ) : void \{static\}\l-Warranty (  ) : void \{static\}\l|-LastFileWatcherEvent : DateTime \{settable\} \{gettable\} \{static\}\l" shape="record" ]
"classdotnet3_1_1_dot_net_bad_architecture_error" [ label="dotnet3::DotNetBadArchitectureError\n|+__init__ (  ) : def\l|+fmt : tuple \{static\}\l" shape="record" ]
"classdotnet3_1_1_dot_net_bad_release_data_error" [ label="dotnet3::DotNetBadReleaseDataError\n|+__init__ (  : self,  : version ) : def\l|+fmt : tuple \{static\}\l" shape="record" ]
"classdotnet3_1_1_dot_net_plugin" [ label="dotnet3::DotNetPlugin\n|+__init__ (  : self,  : name,  : options,  : project ) : def\l+build (  : self ) : def\l+clean_pull (  : self ) : def\l+enable_cross_compilation (  : self ) : def\l+env (  : self,  : root ) : def\l+get_pull_properties (  : cls ) : def\l+pull (  : self ) : def\l+schema (  : cls ) : def\l-_get_appname (  : self ) : def\l-_get_channel_metadata (  : self,  : version ) : def\l-_get_dotnet_release_metadata (  : self,  : url ) : def\l-_get_sdk (  : self ) : def\l-_get_sdk_info (  : self,  : version,  : arch ) : def\l-_get_version_metadata (  : self,  : url ) : def\l-_setup_base_tools (  : self,  : base ) : def\l|-_dotnet_cmd\l-_dotnet_dir\l-_dotnet_sdk_dir\l-_dotnet_targets\l-_sdk\l" shape="record" ]
}
